# 1. print() 함수
#     정의: 괄호 안에 있는 문자/숫자를 출력하는 함수
#     사용방법:print("문자열") => 문자열은 "", ''로 감싸야 한다
#             print(정수/실수)
#             ,[쉼표]는 공백을 포함해 문자열에 추가, +[더하기]는 공백없이 문자열에 추가한다.
#
# 2. type() int() str() float()  함수
#     정의: type(): 데이터 타입 판별 함수
#         int() 함수: 숫자나 문자열을 정수형으로 변환
#         str() 함수: 문자로 변환
#         float() 함수: 실수로 변환
#     사용방법: int("문자")
#             str("숫자")
#             float("문자")
#
# 3. 인덱싱이란
#     정의:자열에서 어떤 글자나 특정 위치를 가리키는 것
#     사용방법:인덱싱[문자순서]: 0번시작
#             ex.) 인덱싱[0], 인덱싱[3]
#
# 4. 슬라이싱
#     정의: 특정 문자열에서 무엇인가를 잘라내는 것
#     사용방법:슬라이싱[시작번호: 끝번호: 단위]
#             ex.) 슬라이싱[0:2:4]
#
# 5. replace() 함수
#     정의:기존문자를 새로운 문자로 교체하는 함수
#     사용방법: replace("기존문자", "새로운문자") 교체함수
#            ex.) replace("a", "A")
#
# 6. split() 함수
#     정의: 분리[분열] 함수
#     사용방법: a.split("문자") => 문자를 기준으로 a가 분리 된다.
#
# 7. %formatiing 이란
#     정의:문자열 중간 중간에 특정 변수의 값을 넣어주기 위해서 사용하는 함수
#     사용방법: %s: 문자형식, %d: 정수형식
#             ex.) "%s,%d" %(a,b)
#
# 8. format() 함수
#     정의:문자열 중간 중간에 특정 변수의 값을 넣어주기 위해서 사용하는 함수
#     사용방법:{} 안에 들어갈 데이터 format 함수 안에 넣기
#             ex.) "{},{}".format(a,b)
#
# 9. f-string
#     정의:문자열 중간 중간에 특정 변수의 값을 넣어주기 위해서 사용하는 함수
#     사용방법:  f"문자{변수명}"
#             ex.) f"a{a}, b,{b}"
#
# 10. strip() rstrip() lstrip() 함수
#     정의: strip() 함수 사용시 앞뒤에 공백 제거 함수
#         rstrip() 함수 사용시 오른쪽 공백 제거 함수
#         lstrip() 함수 사용시 왼쪽 공백 제거 함수
#     사용방법: a.strip()
#             a.rstrip()
#             a.lstrip()
#
# 11. upper() lower() capitalize() 함수
#     정의: upper() 대문자로 변환해주는 함수
#          lower() 소문자로 변환해주는 함수
#          capitalize() 첫글자를 대문자로 변환해주는 함수
#     사용 방법: a.upper()
#              a.lower()
#              a.capitalize()
#
# 12. endswith() startswith() 함수
#     정의: endswith() 끝나는 문자가 맞는지 확인 함수
#         startswith() 시작하는 문자가 맞는지 확인하는 함수
#     사용방법: a.endswith("문자")
#             a.startswith("문자")
#             => 맞으면 Ture, 아니면 False
#
# 13. 리스트와 변수 차이
#     변수: 저장 공간
#         변수명 = 10
#     리스트: 여러개의 변수를 저장하는 공간
#         리스트 = [변수1, 변수2, 변수3 ...]
#         *리스트는 [] 사용
#
# 14. append() insert() 함수
#     정의: append() 리스트에 변수 추가
#         inert() 인덱스 번호에 변수 추가
#     사용방법: 리스트명.append(추가할변수)
#         리스트명.insert(인덱스 번호, 추가할 변수)
#
# 15. del
#     정의: 원하는 인덱스를 삭제
#     사용방법: 리스트명[인덱스번호] => 해당 인덱스 번호가 삭제
#
# 16. max() min() sum() len() 함수
#     정의: max() 최대값[리스트내 최댓값을 구한다]
#         min() 최솟값[리스트내 최솟값을 구한다]
#         sum() 합계[리스트내 모든 숫자를 더한다]
#         len() 계수[리스트내 인덱스의 개수를 구한다]
#     사용방법: max(리스트명)
#         min(리스트명)
#         sum(리스트명)
#         len(리스트명)
#
# 17. join 함수
#     정의: 리스트 내 항목을 어떠한 문자를 기준으로 합칠때 사용하는 함수
#     사용방법: "(문자)".join(리스트명)
#             ex.) " ".join(list)
#
# 18. \n \t 제어문자
#     정의:\n: 줄바꿈 제어문자
#         \t:들여쓰기 제어문자
#
# 19. 리스트를 오름차순/내립차순 하는 방법
#     오름차순: sort              ex.) 리스트명.sort()
#     내림차순: reverse           ex.) 리스트명.reverse()
#
# 20. 차이와 사용방법
#     변수:저장공간
#     리스트: 여러개의 변수를 저장하는 공간
#     튜플: 리스트와 거의 유사하지만 튜플 값을 변경할 순 없다.
#     딕셔너리: 하나의 키와 값으로 이루어진 한 쌍
#
# 21. 튜플을 리스트로 변환하는 방법
#     list(튜플명): 튜플을 리스트로 변환
#
# 22. 리스트를 튜플로 변환하는 방법
#     tuple(리스트명): 리스트를 튜플로 변환
#
# 23. 튜플 언패킹이란
#     정의:묶음X. 데이터 한개[변수]
#     사용방법: ex.) tuple = ('x','y','z')
#                  a,b,c = tuple
#                  print(a,b,c)
#
# 24. 딕셔너리 활용
#     1. 딕셔너리에 리스트 추가
#         딕셔너리명[키] = [값1, 값2, 값3...]
#
#     2. 닥셔너리에 키 값만 출력하는 방법
#         print(딕셔너리명.keys())
#
#     3. 딕셔너리에 값 값만 출력하는 방법
#         print(딕셔너리명.values())
#
#     4. 두 딕셔너리를 합치는 방법
#         dict1.update(dict2)
#
#     5. [키] 튜플과 [값] 튜플을 딕셔너리로 변환하는 방법
#         dict(zip(튜플명1, 튜플명2))
#
#     6. [키] 리스트와 [값] 리스트를 딕셔너리로 변환하는 방법
#         dict(zip(리스트명1, 리스트명2))
# 25. if 활용
#     정의: 논리문
#     사용방법:
#             if 논리:
#               참[코드]
#             else:
#               거짓[코드]
#
#     if 변수 in 리스트명
#         정의: 리스트/딕셔너리에 변수포함여부를 확인
#         사용방법: if 변수 in 리스트명
#
# 26. input()함수
#     정의: 키보드로 문자를 입력받는 함수
#     사용방법: input(숫자)
#             input("문자")
#
# 27. 배수 구하는 방법
#     값 %  == 0: 나머지가 0이면 값은 그 수의 배수
#
# 28. 홀수 구하는 방법
#     값 % 2 == 0: 해당 값은 짝수
#     값 % 2 == 1: 해당 값은 홀수
